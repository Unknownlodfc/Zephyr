--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v90=v2(v0(v30,16));if v19 then local v112=v5(v90,v19);v19=nil;return v112;else return v90;end end end);local function v20(v31,v32,v33) if v33 then local v91=0 + 0 + 0 ;local v92;while true do if (v91==(0 + (957 -(892 + 65)))) then v92=(v31/((879 -(282 + 595))^(v32-((4 -2) -1))))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v92-(v92%(4 -3)) ;end end else local v93=(933 -(857 + 74))^(v32-(569 -(367 + 201))) ;return (((v31%(v93 + v93))>=v93) and 1) or ((1712 -785) -(214 + 713)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 + 0 ;local v36;local v37;while true do if (v35==(2 -1)) then return (v37 * (469 -213)) + v36 ;end if (v35==((942 -592) -(87 + 263))) then v36,v37=v1(v16,v18,v18 + (182 -(67 + (204 -91))) );v18=v18 + (954 -(584 + 218 + 150)) ;v35=1;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (1000 -(915 + 82)) );v18=v18 + (11 -(1194 -(1069 + 118))) ;return (v41 * (9773502 + 7003714)) + (v40 * 65536) + (v39 * (336 -80)) + v38 ;end local function v24() local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(1 -0)) then v45=1 + 0 ;v46=(v20(v44,1 -0 ,8 + 12 ) * (2^(32 + 0))) + v43 ;v42=793 -(368 + 423) ;end if (v42==(9 -6)) then if (v47==(18 -(10 + 8))) then if (v46==(0 -0)) then return v48 * (442 -(416 + (911 -(261 + 624)))) ;else v47=3 -2 ;v45=0 + (0 -0) ;end elseif (v47==((4701 -(1020 + 60)) -1574)) then return ((v46==(438 -(145 + 293))) and (v48 * ((431 -(44 + 386))/(1486 -(998 + 488))))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/((1 + 1)^(43 + 9)))) ;end if (v42==(774 -(201 + 571))) then v47=v20(v44,1159 -(116 + 1022) ,(1551 -(630 + 793)) -97 );v48=((v20(v44,19 + 13 )==(3 -2)) and  -(3 -2)) or 1 ;v42=862 -(814 + 45) ;end if (v42==(0 -0)) then v43=v23();v44=v23();v42=1 + (0 -0) ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(0 + 0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(4 -3) );v18=v18 + v49 ;local v51={};for v67=1, #v50 do v51[v67]=v2(v1(v3(v50,v67,v67)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v94,v95,v96,v97,v98,v99,v100,v101,v102) local v103=(function() return 202 -(14 + 188) ;end)();local v94=(function() return;end)();local v95=(function() return;end)();while true do if (v103==0) then local v117=(function() return 0;end)();local v118=(function() return;end)();while true do if (v117~=(675 -(534 + 141))) then else v118=(function() return 0;end)();while true do if (v118==(0 + 0)) then local v124=(function() return 0;end)();while true do if (v124~=(0 + 0)) then else v94=(function() return 0 + 0 ;end)();v95=(function() return nil;end)();v124=(function() return 1;end)();end if ((1 -0)==v124) then v118=(function() return 1 -0 ;end)();break;end end end if (v118==1) then v103=(function() return 1;end)();break;end end break;end end end if (v103==1) then local v119=(function() return 0;end)();while true do if (0==v119) then while true do if (v94==0) then v95=(function() return v96();end)();if (v97(v95, #"/", #"}")==0) then local v126=(function() return 0;end)();local v127=(function() return;end)();local v128=(function() return;end)();local v129=(function() return;end)();while true do if ((8 -5)==v126) then if (v97(v128, #"xxx", #"gha")== #":") then v129[ #"xnxx"]=(function() return v100[v129[ #"http"]];end)();end v101[v102]=(function() return v129;end)();break;end if (v126==2) then if (v97(v128, #"]", #"}")== #"/") then v129[2]=(function() return v100[v129[2 + 0 ]];end)();end if (v97(v128,2 + 0 ,398 -(115 + 281) )~= #"[") then else v129[ #"xnx"]=(function() return v100[v129[ #"-19"]];end)();end v126=(function() return 6 -3 ;end)();end if (v126==1) then v129=(function() return {v98(),v98(),nil,nil};end)();if (v127==(0 -0)) then local v289=(function() return 0;end)();local v290=(function() return;end)();while true do if (0==v289) then v290=(function() return 0 -0 ;end)();while true do if (0~=v290) then else v129[ #"xxx"]=(function() return v98();end)();v129[ #"0313"]=(function() return v98();end)();break;end end break;end end elseif (v127== #",") then v129[ #"91("]=(function() return v99();end)();elseif (v127==2) then v129[ #"-19"]=(function() return v99() -(2^(883 -(550 + 317))) ;end)();elseif (v127~= #"91(") then else local v335=(function() return 0 -0 ;end)();local v336=(function() return;end)();while true do if (v335==(0 -0)) then v336=(function() return 0 -0 ;end)();while true do if (v336==(285 -(134 + 151))) then v129[ #"xnx"]=(function() return v99() -(2^(1681 -(970 + 695))) ;end)();v129[ #"?id="]=(function() return v98();end)();break;end end break;end end end v126=(function() return 3 -1 ;end)();end if (v126~=(1990 -(582 + 1408))) then else local v239=(function() return 0 -0 ;end)();while true do if ((0 -0)==v239) then v127=(function() return v97(v95,2, #"xxx");end)();v128=(function() return v97(v95, #".com",22 -16 );end)();v239=(function() return 1;end)();end if ((1825 -(1195 + 629))==v239) then v126=(function() return 1 -0 ;end)();break;end end end end end break;end end return v94,v95,v96,v97,v98,v99,v100,v101,v102;end end end end end;end)();local v53=(function() return function(v104,v105,v106) local v107=(function() return 241 -(187 + 54) ;end)();local v108=(function() return;end)();while true do if ((780 -(162 + 618))~=v107) then else v108=(function() return 0 + 0 ;end)();while true do if (v108~=(0 + 0)) then else local v123=(function() return 0;end)();while true do if (v123==(0 -0)) then v104[v105-#"]" ]=(function() return v106();end)();return v104,v105,v106;end end end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #",",v58 do local v70=(function() return 0;end)();local v71=(function() return;end)();local v72=(function() return;end)();local v73=(function() return;end)();while true do if (v70==1) then v73=(function() return nil;end)();while true do if (v71==(1 -0)) then if (v72== #":") then v73=(function() return v21()~=0 ;end)();elseif (v72==(1 + 1)) then v73=(function() return v24();end)();elseif (v72== #"-19") then v73=(function() return v25();end)();end v59[v69]=(function() return v73;end)();break;end if (v71==(1636 -(1373 + 263))) then local v121=(function() return 1000 -(451 + 549) ;end)();local v122=(function() return;end)();while true do if (v121==(0 + 0)) then v122=(function() return 0;end)();while true do if (v122==(1 -0)) then v71=(function() return 1;end)();break;end if (v122~=0) then else local v130=(function() return 0 -0 ;end)();while true do if (v130==0) then v72=(function() return v21();end)();v73=(function() return nil;end)();v130=(function() return 1385 -(746 + 638) ;end)();end if (v130==1) then v122=(function() return 1 + 0 ;end)();break;end end end end break;end end end end break;end if (v70~=0) then else v71=(function() return 0;end)();v72=(function() return nil;end)();v70=(function() return 1;end)();end end end v57[ #"xnx"]=(function() return v21();end)();for v74= #"~",v23() do FlatIdent_7F35E,Descriptor,v21,v20,v22,v23,v59,v54,v74=(function() return v52(FlatIdent_7F35E,Descriptor,v21,v20,v22,v23,v59,v54,v74);end)();end for v75= #" ",v23() do v55,v75,v28=(function() return v53(v55,v75,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1];local v65=v61[2];local v66=v61[(1743 -(404 + 1335)) -1 ];return function(...) local v76=v64;local v77=v65;local v78=v66;local v79=v27;local v80=342 -(218 + 123) ;local v81= -(1582 -((1941 -(183 + 223)) + (55 -9)));local v82={};local v83={...};local v84=v12("#",...) -1 ;local v85={};local v86={};for v109=0 + 0 ,v84 do if (v109>=v78) then v82[v109-v78 ]=v83[v109 + (561 -(306 + 254)) ];else v86[v109]=v83[v109 + 1 ];end end local v87=(v84-v78) + 1 + 0 + 0 ;local v88;local v89;while true do v88=v76[v80];v89=v88[1 -0 ];if (v89<=(1501 -(324 + 575 + 568))) then if (v89<=(11 + 5)) then if (v89<=(16 -9)) then if (v89<=(606 -(268 + (672 -(10 + 327))))) then if ((v89<=(291 -(60 + 230))) or (506>2308)) then if (v89>0) then v86[v88[574 -(426 + 146) ]]=v88[1 + 2 ]~=(1456 -(282 + 1174)) ;else local v132=v88[2];local v133,v134=v79(v86[v132](v13(v86,v132 + 1 + 0 ,v88[3])));v81=(v134 + v132) -(812 -((907 -(118 + 220)) + 242)) ;local v135=0 + 0 ;for v219=v132,v81 do v135=v135 + (2 -1) ;v86[v219]=v133[v135];end end elseif (v89==2) then if v86[v88[1 + 1 ]] then v80=v80 + (1025 -(706 + 318)) ;else v80=v88[1254 -((1170 -(108 + 341)) + 530) ];end else v86[v88[1273 -(945 + 326) ]]=v86[v88[7 -4 ]][v88[4 + 0 ]];end elseif (v89<=(705 -(271 + 429))) then if (v89==(2 + 2)) then v86[v88[2 + 0 ]]=v62[v88[1503 -(1408 + 92) ]];else v86[v88[(4599 -3511) -((1954 -(711 + 782)) + 625) ]]=v86[v88[1291 -(993 + 295) ]]/v86[v88[1 + 3 ]] ;end elseif ((1923<=2218) and (v89>(1177 -(418 + 753)))) then if ((2173>379) and (v86[v88[1 + 1 ]]~=v86[v88[1 + (5 -2) ]])) then v80=v80 + 1 + 0 ;else v80=v88[1 + 2 ];end else local v141=v77[v88[532 -(406 + (592 -(270 + 199))) ]];local v142;local v143={};v142=v10({},{__index=function(v222,v223) local v224=v143[v223];return v224[1770 -(1749 + 20) ][v224[1 + 1 ]];end,__newindex=function(v225,v226,v227) local v228=v143[v226];v228[1323 -(1249 + 73) ][v228[2]]=v227;end});for v230=1 + 0 ,v88[1149 -(466 + (2018 -1339)) ] do v80=v80 + (2 -1) ;local v231=v76[v80];if ((v231[1]==(188 -122)) or (2591==3409)) then v143[v230-(1901 -(106 + 1794)) ]={v86,v231[3]};else v143[v230-(2 -1) ]={v62,v231[587 -(57 + 527) ]};end v85[ #v85 + (1428 -(41 + 1386)) ]=v143;end v86[v88[2]]=v29(v141,v142,v63);end elseif ((4514>3324) and (v89<=(114 -(17 + 86)))) then if ((v89<=(7 + 2)) or (208>=4828)) then if ((v89==(17 -9)) or (1583>3567)) then do return;end else local v145=0 -0 ;local v146;while true do if ((v145==(0 + 0)) or (1313==794)) then v146=v88[2];v86[v146](v13(v86,v146 + ((435 -268) -(122 + 44)) ,v88[5 -2 ]));break;end end end elseif (v89==(33 -23)) then v86[v88[2 + 0 ]]=v86[v88[1 + 2 ]] + v86[v88[7 -3 ]] ;else v86[v88[67 -(30 + 22 + 13) ]][v88[3 + 0 ]]=v88[1261 -(1043 + 214) ];end elseif (v89<=13) then if (v89>(45 -33)) then local v150=1212 -((1490 -(645 + 522)) + 889) ;local v151;while true do if (v150==((1790 -(1010 + 780)) -0)) then v151=v88[582 -(361 + 219) ];v86[v151]=v86[v151](v13(v86,v151 + 1 ,v88[323 -(53 + 0 + 267) ]));break;end end else v86[v88[1 + 1 ]]=v86[v88[416 -(15 + 398) ]] -v86[v88[986 -(18 + (4592 -3628)) ]] ;end elseif (v89<=(52 -38)) then if (v88[2 + 0 ]==v86[v88[11 -7 ]]) then v80=v80 + 1 + 0 ;else v80=v88[3];end elseif (v89==((2701 -(1045 + 791)) -(20 + 830))) then local v243=v88[2 + 0 ];local v244={};for v273=1, #v85 do local v274=v85[v273];for v291=0, #v274 do local v292=126 -(116 + 10) ;local v293;local v294;local v295;while true do if (v292==(1 + 0)) then v295=v293[740 -(542 + 196) ];if ((3174>2902) and (v294==v86) and (v295>=v243)) then local v332=0 -0 ;while true do if ((4120<=4260) and (v332==(0 + 0))) then v244[v295]=v294[v295];v293[1 + 0 ]=v244;break;end end end break;end if (v292==((0 -0) + 0)) then v293=v274[v291];v294=v293[2 -1 ];v292=2 -1 ;end end end end else for v275=v88[1553 -(1126 + 425) ],v88[3] do v86[v275]=nil;end end elseif (v89<=(430 -(118 + (437 -150)))) then if (v89<=(78 -58)) then if ((v89<=(1139 -(118 + 1003))) or (883>4778)) then if ((v89==17) or (3620>=4891)) then local v153=0 -0 ;local v154;local v155;local v156;local v157;while true do if ((4258>937) and (v153==0)) then v154=v88[379 -(142 + 235) ];v155,v156=v79(v86[v154](v13(v86,v154 + (4 -(508 -(351 + 154))) ,v88[1 + 2 ])));v153=1575 -(1281 + 293) ;end if (v153==1) then v81=(v156 + v154) -1 ;v157=977 -(553 + 424) ;v153=3 -1 ;end if (v153==(2 + (266 -(28 + 238)))) then for v296=v154,v81 do v157=v157 + (2 -1) + 0 ;v86[v296]=v155[v157];end break;end end else v86[v88[2 + 0 ]]=v62[v88[2 + 1 ]];end elseif (v89==(11 + 8)) then v86[v88[4 -(1561 -(1381 + 178)) ]]=v88[7 -4 ];else v86[v88[4 -2 ]][v88[1 + 2 ]]=v86[v88[19 -(15 + 0) ]];end elseif (v89<=(775 -(239 + 415 + 99))) then if ((v89>(8 + 13)) or (4869<906)) then v86[v88[1331 -(797 + 532) ]]=v29(v77[v88[2 + 1 + 0 ]],nil,v63);else v62[v88[2 + 1 ]]=v86[v88[4 -2 ]];end elseif (v89<=(1225 -(373 + 829))) then local v167=v88[2];v86[v167]=v86[v167]();elseif (v89==24) then v86[v88[733 -(476 + 255) ]][v88[1133 -(369 + 761) ]]=v86[v88[13 -9 ]];else local v247=v88[2 + 0 ];v86[v247]=v86[v247](v86[v247 + (1 -0) ]);end elseif (v89<=((28 + 26) -25)) then if (v89<=(265 -(64 + (644 -(381 + 89))))) then if (v89>(4 + 22)) then v86[v88[2 -0 ]]=v86[v88[339 -(128 + 16 + 192) ]] + v86[v88[220 -(42 + 174) ]] ;else v86[v88[2 + 0 ]]=v86[v88[3]][v88[4]];end elseif ((v89==(24 + 4)) or (1225>4228)) then local v172=0 + 0 ;local v173;while true do if ((3328>2238) and (v172==(0 + 0))) then v173=v88[1506 -((621 -258) + 1141) ];v86[v173]=v86[v173]();break;end end elseif (v86[v88[2]]==v86[v88[4]]) then v80=v80 + (1581 -(1183 + 397)) ;else v80=v88[8 -5 ];end elseif ((3839>1405) and (v89<=31)) then if (v89>(22 + 8)) then v86[v88[2]]=v88[3 + 0 ]~=(1975 -(1913 + 62)) ;else v86[v88[2 + 0 ]]={};end elseif (v89<=32) then if (v86[v88[5 -3 ]]==v88[4]) then v80=v80 + 1 ;else v80=v88[1936 -(565 + (2524 -(1074 + 82))) ];end elseif (v89>(124 -91)) then v80=v88[1664 -(1477 + 184) ];elseif (v86[v88[2]]==v88[5 -1 ]) then v80=v80 + (1 -0) ;else v80=v88[3 + 0 ];end elseif (v89<=51) then if ((v89<=(898 -(564 + 292))) or (1293<=507)) then if (v89<=(65 -27)) then if (v89<=((1892 -(214 + 1570)) -72)) then if (v89==((1794 -(990 + 465)) -(244 + 60))) then for v233=v88[1 + 1 ],v88[3] do v86[v233]=nil;end else local v176=v88[1 + 1 + 0 ];local v177=v86[v88[479 -(40 + 1 + 435) ]];v86[v176 + 1 ]=v177;v86[v176]=v177[v88[1005 -(938 + 63) ]];end elseif (v89==(29 + 8)) then local v181=v88[1127 -(936 + 189) ];local v182={};for v235=1 + 0 , #v85 do local v236=1613 -(1565 + 48) ;local v237;while true do if (v236==(0 -0)) then v237=v85[v235];for v313=0 + 0 , #v237 do local v314=0;local v315;local v316;local v317;while true do if ((v314==(1139 -(782 + 356))) or (2896<805)) then v317=v315[(1995 -(1668 + 58)) -(176 + 91) ];if ((v316==v86) and (v317>=v181)) then v182[v317]=v316[v317];v315[1]=v182;end break;end if (v314==(0 -0)) then v315=v237[v313];v316=v315[1 -0 ];v314=1093 -((1601 -(512 + 114)) + 117) ;end end end break;end end end elseif ((2316==2316) and (v86[v88[2]]==v86[v88[1879 -((409 -252) + 1718) ]])) then v80=v80 + 1 + 0 ;else v80=v88[10 -7 ];end elseif (v89<=((280 -144) -96)) then if ((v89>(1057 -((2425 -1728) + 321))) or (2570==1533)) then if (v86[v88[5 -3 ]] or (883==1460)) then v80=v80 + (1 -0) ;else v80=v88[6 -3 ];end else v86[v88[1 + 1 ]]=v86[v88[5 -2 ]] -v86[v88[10 -6 ]] ;end elseif ((v89==(1268 -(322 + 905))) or (4619<=999)) then v63[v88[614 -(602 + 9) ]]=v86[v88[(555 + 636) -(449 + 740) ]];else local v186=v88[874 -(826 + 46) ];v86[v186]=v86[v186](v86[v186 + (948 -(245 + 702)) ]);end elseif (v89<=(145 -99)) then if ((v89<=(15 + 29)) or (3410>4116)) then if ((v89==(1941 -(260 + 1638))) or (903>=3059)) then v86[v88[(83 + 359) -(382 + 58) ]][v88[9 -6 ]]=v88[4 + 0 ];else v86[v88[3 -1 ]]();end elseif (v89==(133 -88)) then do return;end else v86[v88[1207 -(902 + 303) ]]={};end elseif ((v89<=48) or (3976<2857)) then if (v89==(103 -56)) then v86[v88[2]]=v63[v88[6 -3 ]];else v86[v88[1 + 1 ]]=v88[1693 -(1121 + 569) ];end elseif (v89<=(263 -(20 + 2 + 192))) then local v195=683 -(483 + 200) ;local v196;while true do if ((4930>2307) and (v195==0)) then v196=v88[2];v86[v196](v13(v86,v196 + (1464 -(1404 + 59)) ,v81));break;end end elseif (v89==50) then v86[v88[2]]();else v86[v88[5 -3 ]]=v63[v88[3 -(0 -0) ]];end elseif (v89<=(825 -(468 + (2291 -(109 + 1885))))) then if (v89<=55) then if (v89<=(615 -(334 + 228))) then if (v89>(175 -(1592 -(1269 + 200)))) then if (v88[(7 -3) -2 ]==v86[v88[4]]) then v80=v80 + (1 -0) ;else v80=v88[1 + 2 ];end else local v197=236 -(141 + 95) ;local v198;while true do if ((v197==(0 + 0)) or (4046<1291)) then v198=v88[2];v86[v198]=v86[v198](v13(v86,v198 + (2 -1) ,v81));break;end end end elseif (v89==54) then if ((v86[v88[4 -2 ]]~=v86[v88[1 + 3 ]]) or (4241==3545)) then v80=v80 + 1 ;else v80=v88[8 -5 ];end else v86[v88[2]]=v86[v88[3 + 0 ]]/v86[v88[4]] ;end elseif ((v89<=(30 + 27)) or (4048>4232)) then if ((v89==((893 -(98 + 717)) -22)) or (1750>=3473)) then local v200=v88[2 + (826 -(802 + 24)) ];v86[v200](v86[v200 + 1 ]);else v63[v88[166 -(92 + 71) ]]=v86[v88[2]];end elseif (v89<=(29 + 29)) then v62[v88[4 -1 ]]=v86[v88[767 -((989 -415) + 191) ]];elseif (v89==(49 + (12 -2))) then v86[v88[4 -2 ]]=v86[v88[2 + 1 ]];else v80=v88[852 -(254 + 595) ];end elseif ((3166==3166) and (v89<=(190 -(55 + 71)))) then if (v89<=62) then if ((1763<3724) and (v89==61)) then local v205=0;local v206;local v207;local v208;while true do if (2==v205) then for v301=1 -0 ,v88[4] do v80=v80 + (1791 -(85 + 488 + 1217)) ;local v302=v76[v80];if (v302[(2 + 0) -1 ]==(6 + 60)) then v208[v301-1 ]={v86,v302[8 -5 ]};else v208[v301-(1 -0) ]={v62,v302[3]};end v85[ #v85 + (1 -0) ]=v208;end v86[v88[2]]=v29(v206,v207,v63);break;end if ((806 -((328 -210) + 688))==v205) then v206=v77[v88[3]];v207=nil;v205=49 -(25 + 23) ;end if ((1 + 0)==v205) then v208={};v207=v10({},{__index=function(v304,v305) local v306=1886 -(927 + 959) ;local v307;while true do if (v306==(0 -0)) then v307=v208[v305];return v307[733 -(16 + 716) ][v307[3 -1 ]];end end end,__newindex=function(v308,v309,v310) local v311=97 -(11 + 86) ;local v312;while true do if (v311==(0 -0)) then v312=v208[v309];v312[1][v312[287 -(175 + 110) ]]=v310;break;end end end});v205=4 -2 ;end end else local v209=0 -0 ;local v210;while true do if ((1796 -(503 + 1293))==v209) then v210=v88[5 -3 ];v86[v210](v86[v210 + 1 ]);break;end end end elseif (v89==(46 + 15 + 2)) then local v211=v88[1063 -(589 + 221 + 251) ];v86[v211](v13(v86,v211 + 1 + 0 ,v88[1 + 2 ]));else local v212=v88[2 + 0 ];v86[v212]=v86[v212](v13(v86,v212 + 1 ,v81));end elseif (v89<=66) then if ((57<=2723) and (v89==65)) then local v214=v88[2];v86[v214]=v86[v214](v13(v86,v214 + 1 ,v88[(251 + 285) -(43 + 490) ]));else v86[v88[735 -(711 + 22) ]]=v86[v88[11 -8 ]];end elseif ((v89<=((2359 -(797 + 636)) -(240 + 619))) or (2070==443)) then v86[v88[1 + 1 ]]=v29(v77[v88[4 -1 ]],nil,v63);elseif ((v89==(5 + 63)) or (2705==1393)) then local v261=0;local v262;while true do if (0==v261) then v262=v88[(8477 -6731) -(1344 + (2019 -(1427 + 192))) ];v86[v262](v13(v86,v262 + (406 -(255 + 150)) ,v81));break;end end else local v263=v88[2];local v264=v86[v88[3 + 0 ]];v86[v263 + 1 + 0 ]=v264;v86[v263]=v264[v88[16 -(5 + 7) ]];end v80=v80 + (3 -2) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
