--Open Source
--Please, credit me if you'll use any code. Thanks

local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()

local Window = Library:CreateWindow{
    Title = "Zephyr",
    SubTitle = "Granny: Gab Edition",
    TabWidth = 160,
    Size = UDim2.fromOffset(830, 525),
    Resize = false,
    MinSize = Vector2.new(470, 380),
    Acrylic = true,
    Theme = "Vynixu",
    MinimizeKey = Enum.KeyCode.RightControl
}

local Tabs = {
    Main = Window:CreateTab{
        Title = "Main",
        Icon = "user"
    },
    Exploits = Window:CreateTab{
        Title = "Exploits",
        Icon = "phosphor-users-bold"
    },
    Visual = Window:CreateTab{
        Title = "Visual",
        Icon = "eye"
    },
    Upgrade = Window:CreateTab{
        Title = "Upgrade",
        Icon = "shield"
    },
    Bypass = Window:CreateTab{
        Title = "Bypass",
        Icon = "eye"
    },
    Server = Window:CreateTab{
        Title = "Server",
        Icon = "server"
    },
    Settings = Window:CreateTab{
        Title = "Settings",
        Icon = "settings"
    }
}

local Options = Library.Options

local Toggle = Tabs.Main:CreateToggle("Noclip", {Title = "Noclip", Default = false})

Toggle:OnChanged(function(Value)
getgenv().noclip = Value
if Value then
        game:GetService("RunService").Stepped:Connect(function()
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            if character then
                for _, part in ipairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = not getgenv().noclip
                    end
                end
            end
        end)
    else
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        if character then
            for _, part in ipairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
end)

local Toggle = Tabs.Main:CreateToggle("FullBright", {Title = "FullBright", Default = false })

Toggle:OnChanged(function(Value)
getgenv().fullbright = Value
local lighting = game:GetService("Lighting")
if Value then
lighting.Ambient = Color3.fromRGB(255, 255, 255)
lighting.Brightness = 1
lighting.FogEnd = 1e10
else
lighting.Ambient = Color3.fromRGB(72, 72, 72)
lighting.Brightness = 2
lighting.FogEnd = 100000
end
end)

local Toggle = Tabs.Main:CreateToggle("AutoEscapeTrap", {Title = "Auto-Escape Trap", Default = false })

Toggle:OnChanged(function(Value)
getgenv().autoescapetrap = Value
while getgenv().autoescapetrap do
local args = {
    [1] = game:GetService("Players").LocalPlayer
}

game:GetService("ReplicatedStorage").Events.EscapedTrap:FireServer(unpack(args))
task.wait(0.3)
end
end)

local Toggle = Tabs.Main:CreateToggle("AdminPanel", {Title = "Admin Panel", Default = false })

Toggle:OnChanged(function(Value)
game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("MainMenu"):WaitForChild("PanelAdmin").Visible = Value
end)

local FOVToggle = Tabs.Main:CreateToggle("Toggle FOV", {Title = "Enable Field Of View", Default = false })

local FOVSlider = Tabs.Main:CreateSlider("FieldOfView", {
    Title = "Field Of View",
    Description = "",
    Default = 70,
    Min = 70,
    Max = 120,
    Rounding = 0,
    Callback = function(Value)
    if FOVToggle.Value then
    game.Workspace.CurrentCamera.FieldOfView = Value
    end
    end
})

local fov

FOVToggle:OnChanged(function(Value)
    if Value then
        game.Workspace.CurrentCamera.FieldOfView = FOVSlider.Value
        fov = game:GetService("RunService").RenderStepped:Connect(function()
            if FOVToggle.Value then
                game.Workspace.CurrentCamera.FieldOfView = FOVSlider.Value
            end
        end)
    else
        if fov then
            fov:Disconnect()
            fov = nil
        end
        game.Workspace.CurrentCamera.FieldOfView = 70
    end
end)

Tabs.Exploits:CreateButton{
    Title = "Infinite Points",
    Description = "",
    Callback = function()
                        local args = {
                            [1] = 10000000000000,
                            [2] = "RavePoints",
                            [3] = "Point",
                            [5] = false
                        }
                        game:GetService("ReplicatedStorage").Events.ExchangeCode2:FireServer(unpack(args))
    end
}

Tabs.Exploits:CreateButton{
    Title = "Infinite PU",
    Description = "",
    Callback = function()
                        local args = {
                            [1] = 10000000000000,
                            [2] = "RavePoints",
                            [3] = "PU",
                            [5] = false
                        }
                        game:GetService("ReplicatedStorage").Events.ExchangeCode2:FireServer(unpack(args))
    end
}

Tabs.Exploits:CreateButton{
    Title = "Respawn Everyone",
    Description = "",
    Callback = function()
for _, player in pairs(game.Players:GetPlayers()) do
local args = {
    [1] = player,
    [2] = player
}

game:GetService("ReplicatedStorage").Events.ResetCharacter:FireServer(unpack(args))
end
    end
}

local Toggle = Tabs.Exploits:CreateToggle("RespawnAll", {Title = "Respawn Everyone [LOOP]", Default = false })

Toggle:OnChanged(function(Value)
getgenv().respawnall = Value
while getgenv().respawnall do
for _, player in pairs(game.Players:GetPlayers()) do
local args = {
    [1] = player,
    [2] = player
}

game:GetService("ReplicatedStorage").Events.ResetCharacter:FireServer(unpack(args))
end
task.wait(0.2)
end
end)

local Input = Tabs.Exploits:CreateInput("Input", {
    Title = "Respawn Player",
    Default = "",
    Placeholder = "Placeholder",
    Numeric = false,
    Finished = true,
    Callback = function(PlayerName)
local args = {
    [1] = game.Players[PlayerName],
    [2] = game.Players[PlayerName]
}

game:GetService("ReplicatedStorage").Events.ResetCharacter:FireServer(unpack(args))
    end
})

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local soundOptions = {
    "WhereAreYou",
    "HideAndSeek",
    "ISeeYou",
    "Laugh1",
    "Laugh2",
    "Laugh3"
}

local Dropdown = Tabs.Exploits:CreateDropdown("Select Sound", {
    Title = "Voice",
    Values = soundOptions,
    Multi = false,
    Default = 1,
})

Tabs.Exploits:CreateButton{
    Title = "Play Voice",
    Description = "",
    Callback = function()
        local selectedSound = Dropdown.Value
        if selectedSound then
            local args = {
                [1] = selectedSound
            }
            ReplicatedStorage.PlaySoundEvent:FireServer(unpack(args))
        end
    end
}

local Toggle = Tabs.Visual:CreateToggle("ItemsESP", {Title = "Items ESP", Default = false })

Toggle:OnChanged(function(Value)
getgenv().itemsEsp = Value
if Value then
while getgenv().itemsEsp do
local LocalMaps = {"House", "Office", "Camp", "School"}
local folder

for _, map in ipairs(LocalMaps) do
    if game.Workspace.Map:FindFirstChild(map) then
        folder = game.Workspace.Map[map].Objects
    end
end

if not folder then
    warn("Zephyr | Unexpected error with the ESP. [No valid map found]")
    return
end

local function createBillboard(model)
    local existingBillboard = model:FindFirstChild("ZephyrItemsESP")
    if existingBillboard then
        return
    end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ZephyrItemsESP"
    billboard.Adornee = model.PrimaryPart
    billboard.Size = UDim2.new(0, 50, 0, 50)
    billboard.AlwaysOnTop = true

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = model.Name
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.TextScaled = true
    textLabel.TextStrokeTransparency = 0.5
    textLabel.Font = Enum.Font.FredokaOne
    textLabel.Parent = billboard

    billboard.Parent = model
end

for _, model in ipairs(folder:GetChildren()) do
    if model:IsA("Model") then
        createBillboard(model)
    end
end
task.wait()
end
else
for _, object in pairs(workspace:GetDescendants()) do
    if object:IsA("BillboardGui") and object.Name == "ZephyrItemsESP" then
        object:Destroy()
    end
end
end
end)


local Toggle = Tabs.Visual:CreateToggle("TrapESP", {Title = "Trap ESP", Default = false})

Toggle:OnChanged(function(Value)
    getgenv().trapEsp = Value
    local Workspace = game:GetService("Workspace")

    if Value then
        while getgenv().trapEsp do
            local descendants = Workspace:GetDescendants()

            for _, descendant in ipairs(descendants) do
                if descendant:IsA("Model") and descendant.Name == "Trap" then
                    local highlight = descendant:FindFirstChild("ZephyrTrapESP")
                    if not highlight then
                        local newHighlight = Instance.new("Highlight")
                        newHighlight.Name = "ZephyrTrapESP"
                        newHighlight.Adornee = descendant
                        newHighlight.FillColor = Color3.new(1, 0, 0)
                        newHighlight.FillTransparency = 0.5
                        newHighlight.OutlineColor = Color3.new(1, 1, 1)
                        newHighlight.OutlineTransparency = 1
                        newHighlight.Parent = descendant
                    end
                end
            end
            
            task.wait(0.2)
        end
    else
        for _, object in pairs(Workspace:GetDescendants()) do
            if object:IsA("Highlight") and object.Name == "ZephyrTrapESP" then
                object:Destroy()
            end
        end
    end
end)

local Toggle = Tabs.Visual:CreateToggle("PlayersESP", {Title = "Players ESP", Default = false })

Toggle:OnChanged(function(Value)
getgenv().playerEsp = Value
if Value then
while getgenv().playerEsp do
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

local function highlightPlayer(player)
    if player == localPlayer then
        return
    end
    
    local character = player.Character or player.CharacterAdded:Wait()
    
    if character:FindFirstChild("ZephyrPlayerESP") then
        return
    end

    local highlight = Instance.new("Highlight")
    highlight.Name = "ZephyrPlayerESP"
    highlight.Adornee = character
    highlight.FillColor = Color3.fromRGB(13, 105, 172)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 1

    highlight.Parent = character
end

local function highlightAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        highlightPlayer(player)
    end
end

highlightAllPlayers()
task.wait(0.6)
end
else
for _, object in pairs(workspace:GetDescendants()) do
    if object:IsA("Highlight") and object.Name == "ZephyrPlayerESP" then
        object:Destroy()
    end
end
end
end)

local Toggle = Tabs.Upgrade:CreateToggle("AutoUpgradePU", {Title = "Auto-Upgrade Everything (PU)", Default = false })

Toggle:OnChanged(function(Value)
getgenv().autoupgradepu = Value
while getgenv().autoupgradepu do
local player = game:GetService("Players").LocalPlayer
local replicatedStorage = game:GetService("ReplicatedStorage")
local upPointEvent = replicatedStorage.Events.upPoint

local upgrades = {
    player.Upgrades.Granny.Speed,
    player.Upgrades.Granny.PutTrap,
    player.Upgrades.Player.Speed,
    player.Upgrades.Player.RemoveTrap
}

for _, upgrade in ipairs(upgrades) do
    local args = { upgrade, "Robux" }
    upPointEvent:FireServer(unpack(args))
end
task.wait(0.3)
end
end)

local Toggle = Tabs.Upgrade:CreateToggle("AutoUpgradeMoney", {Title = "Auto-Upgrade Everything (Money)", Default = false })

Toggle:OnChanged(function(Value)
getgenv().autoupgrademoney = Value
while getgenv().autoupgrademoney do
local player = game:GetService("Players").LocalPlayer
local replicatedStorage = game:GetService("ReplicatedStorage")
local upPointEvent = replicatedStorage.Events.upPoint

local upgrades = {
    player.Upgrades.Granny.Speed,
    player.Upgrades.Granny.PutTrap,
    player.Upgrades.Player.Speed,
    player.Upgrades.Player.RemoveTrap
}

for _, upgrade in ipairs(upgrades) do
    local args = { upgrade, 1}
    upPointEvent:FireServer(unpack(args))
end
task.wait(0.3)
end
end)

local Toggle = Tabs.Bypass:CreateToggle("BypassTrap", {Title = "Bypass Trap", Default = false })

Toggle:OnChanged(function(Value)
getgenv().trapbypass = Value
while getgenv().trapbypass do
local Workspace = game:GetService("Workspace")

local function deleteHitBox()
    for _, descendant in ipairs(Workspace:GetDescendants()) do
        if descendant:IsA("BasePart") and descendant.Name == "HitBox" then
            if descendant.Parent and descendant.Parent.Name == "Trap" then
                descendant:Destroy()
            end
        end
    end
end

deleteHitBox()
task.wait(0.3)
end
end)

Tabs.Server:CreateButton{
    Title = "Rejoin",
    Description = "",
    Callback = function()
        Window:Dialog{
            Title = "Are you sure?",
            Content = "There's no undo!",
            Buttons = {
                {
                    Title = "Yes",
                    Callback = function()
local TeleportService = game:GetService("TeleportService")
local Player = game:GetService("Players").LocalPlayer

TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, Player)    
                    end
                },
                {
                    Title = "No",
                    Callback = function()
                        print("Successfully clicked No.")
                    end
                }
            }
        }
    end
}

SaveManager:SetLibrary(Library)
InterfaceManager:SetLibrary(Library)
InterfaceManager:SetFolder("Zephyr Granny Gab Edition")
SaveManager:SetFolder("Zephyr Granny Gab Edition/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
Window:SelectTab(1)
SaveManager:LoadAutoloadConfig()
